specVersion: 0.0.4
schema:
  file: ./schema.graphql
dataSources:
  # Registry
  - kind: ethereum/contract
    name: Registry
    network: {{ network }}
    source:
      address: "{{ registry.address }}"
      abi: Registry
      startBlock: {{ registry.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Project
        - Account
        - AccountProject
      abis:
        - name: Registry
          file: ./abis/Registry.json
      eventHandlers:
        - event: MetadataUpdated(indexed bytes32,(uint256,string),uint8)
          handler: handleMetadataUpdated
        - event: RoleGranted(indexed bytes32,indexed address,indexed address)
          handler: handleOwnerAdded
        - event: RoleRevoked(indexed bytes32,indexed address,indexed address)
          handler: handleOwnerRemoved
      file: ./src/registry/index.ts

  # RoundFactory
  - kind: ethereum/contract
    name: Round
    network: {{ network }}
    source:
      address: '{{ roundFactory.address }}'
      abi: RoundFactory
      startBlock: {{ roundFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Round
      abis:
        - name: RoundFactory
          file: ./abis/RoundFactory.json
        - name: RoundImplementation
          file: ./abis/RoundImplementation.json
      eventHandlers:
        - event: RoundCreated(indexed bytes32,indexed address,indexed address,address)
          handler: handleRoundCreated
        - event: StrategyContractCreated(indexed address,indexed address,indexed address)
          handler: handleStrategyCreated
      file: ./src/round/factory.ts

  # AlloSettings
  - kind: ethereum/contract
    name: AlloSettings
    network: {{ network }}
    source:
      address: '{{ alloSettings.address }}'
      abi: AlloSettings
      startBlock: {{ alloSettings.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - AlloSettings
      abis:
        - name: AlloSettings
          file: ./abis/AlloSettings.json
      eventHandlers:
        - event: ProtocolFeePercentageUpdated(uint24)
          handler: handleProtocolFeePercentageUpdated
        - event: ProtocolTreasuryUpdated(address)
          handler: handleProtocolTreasuryUpdated
      file: ./src/settings/alloSettings.ts

templates:

  # RoundImplementation AccessControl
  - kind: ethereum/contract
    name: RoundImplementation
    network: {{ network }}
    source:
      abi: RoundImplementation
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - RoundRole
      abis:
        - name: RoundImplementation
          file: ./abis/RoundImplementation.json
        - name: MerklePayoutStrategyImplementation
          file: ./abis/MerklePayoutStrategyImplementation.json
      eventHandlers:
        - event: RoleGranted(indexed bytes32,indexed address,indexed address)
          handler: handleRoleGranted
        - event: RoleRevoked(indexed bytes32,indexed address,indexed address)
          handler: handleRoleRevoked
        - event: NewProjectApplication(indexed bytes32,uint256,(uint256,string))
          handler: handleNewProjectApplication
        - event: ApplicationStatusesUpdated(indexed uint256,indexed uint256)
          handler: handleApplicationStatusesUpdated
        - event: RoundMetaPtrUpdated((uint256,string))
          handler: handleRoundMetaPtrUpdated
        - event: ApplicationMetaPtrUpdated((uint256,string))
          handler: handleApplicationMetaPtrUpdated
        - event: ApplicationsStartTimeUpdated(uint256)
          handler: handleApplicationsStartTimeUpdated
        - event: ApplicationsEndTimeUpdated(uint256)
          handler: handleApplicationsEndTimeUpdated
        - event: RoundStartTimeUpdated(uint256)
          handler: handleRoundStartTimeUpdated
        - event: RoundEndTimeUpdated(uint256)
          handler: handleRoundEndTimeUpdated
      file: ./src/round/implementation.ts

  # MerklePayoutStrategyImplementation
  - kind: ethereum/contract
    name: MerklePayoutStrategyImplementation
    network: {{ network }}
    source:
      abi: MerklePayoutStrategyImplementation
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Payout
      abis:
        - name: MerklePayoutStrategyImplementation
          file: ./abis/MerklePayoutStrategyImplementation.json
      eventHandlers:
        - event: DistributionUpdated(bytes32,(uint256,string))
          handler: handleDistributionUpdated
          receipt: true
        - event: ReadyForPayout()
          handler: handleReadyForPayout
          receipt: true
        - event: FundsDistributed(uint256,address,indexed address,indexed bytes32)
          handler: handleFundsDistributed
          receipt: true
      file: ./src/strategies/merkle/implementation.ts
